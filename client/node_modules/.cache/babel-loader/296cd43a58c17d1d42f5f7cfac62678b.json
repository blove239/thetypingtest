{"ast":null,"code":"var _jsxFileName = \"/home/brandon/jsproj/thetypingtest/src/Components/TimerCircle.js\";\nimport React, { useState } from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport '../css/timercircle.css';\n\nconst RenderTime = ({\n  remainingTime,\n  resetTest,\n  resetCircle\n}) => {\n  if (remainingTime === 0) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onMouseDown: e => {\n        e.preventDefault();\n        resetTest();\n        resetCircle();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 12\n      }\n    }, \" Start Over! \");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, remainingTime, \"s\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"seconds\"));\n};\n\nconst TimerCircle = ({\n  isTestActive,\n  testComplete,\n  resetTest,\n  isTestDone\n}) => {\n  const [key, setKey] = useState(0);\n\n  const resetCircle = () => {\n    setKey(key => key + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CountdownCircleTimer, {\n    key: key,\n    isPlaying: isTestActive,\n    duration: 10,\n    colors: [['#004777', 0.33], ['#F7B801', 0.33], ['#A30000', 0.33]],\n    onComplete: () => testComplete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RenderTime, {\n    resetTest: resetTest,\n    resetCircle: resetCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  })));\n};\n\nexport default TimerCircle;","map":{"version":3,"sources":["/home/brandon/jsproj/thetypingtest/src/Components/TimerCircle.js"],"names":["React","useState","CountdownCircleTimer","RenderTime","remainingTime","resetTest","resetCircle","e","preventDefault","TimerCircle","isTestActive","testComplete","isTestDone","key","setKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,OAAO,wBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,SAAjB;AAA4BC,EAAAA;AAA5B,CAAD,KAA+C;AAChE,MAAIF,aAAa,KAAK,CAAtB,EAAyB;AACvB,wBAAO;AACL,MAAA,WAAW,EAAGG,CAAD,IAAO;AAClBA,QAAAA,CAAC,CAACC,cAAF;AACAH,QAAAA,SAAS;AACTC,QAAAA,WAAW;AACZ,OALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AAMD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,aAAxB,MADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAMD,CAfD;;AAiBA,MAAMK,WAAW,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,YAAhB;AAA8BN,EAAAA,SAA9B;AAAyCO,EAAAA;AAAzC,CAAD,KAA2D;AAC7E,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACxBQ,IAAAA,MAAM,CAACD,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAN;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,SAAS,EAAEH,YAFb;AAGE,IAAA,QAAQ,EAAE,EAHZ;AAIE,IAAA,MAAM,EAAE,CACN,CAAC,SAAD,EAAY,IAAZ,CADM,EAEN,CAAC,SAAD,EAAY,IAAZ,CAFM,EAGN,CAAC,SAAD,EAAY,IAAZ,CAHM,CAJV;AASE,IAAA,UAAU,EAAE,MAAMC,YAAY,EAThC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWG,oBAAC,UAAD;AACC,IAAA,SAAS,EAAEN,SADZ;AAEC,IAAA,WAAW,EAAEC,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,CADF,CADF;AAoBD,CA3BD;;AA6BA,eAAeG,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport '../css/timercircle.css';\n\nconst RenderTime = ({ remainingTime, resetTest, resetCircle }) => {\n  if (remainingTime === 0) {\n    return <button\n      onMouseDown={(e) => {\n        e.preventDefault();\n        resetTest();\n        resetCircle();\n      }}> Start Over! </button>\n  }\n  return (\n    <div className=\"timer\">\n      <div className=\"value\">{remainingTime}s</div>\n      <div className=\"text\">seconds</div>\n    </div>\n  );\n};\n\nconst TimerCircle = ({ isTestActive, testComplete, resetTest, isTestDone }) => {\n  const [key, setKey] = useState(0);\n\n  const resetCircle = () => {\n    setKey(key => key + 1);\n  }\n\n  return (\n    <div>\n      <CountdownCircleTimer\n        key={key}\n        isPlaying={isTestActive}\n        duration={10}\n        colors={[\n          ['#004777', 0.33],\n          ['#F7B801', 0.33],\n          ['#A30000', 0.33],\n        ]}\n        onComplete={() => testComplete()}\n      >\n        {<RenderTime\n          resetTest={resetTest}\n          resetCircle={resetCircle}\n        />}\n      </CountdownCircleTimer>\n    </div>\n  );\n}\n\nexport default TimerCircle;\n"]},"metadata":{},"sourceType":"module"}