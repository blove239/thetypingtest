{"ast":null,"code":"import _toConsumableArray from\"/home/brandon/jsproj/thetypingtest/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/brandon/jsproj/thetypingtest/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import Title from'./Components/Title';import Stats from'./Components/Stats';import TimerCircle from'./Components/TimerCircle';import WordList from'./Components/WordList';import randomWords from'random-words';import Footer from'./Components/Footer';import{TEST_WORDS}from'./utils/constants';import'./App.css';var App=function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentWordNum=_useState2[0],setCurrentWordNum=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),currentCharNum=_useState4[0],setCurrentCharNum=_useState4[1];var _useState5=useState(['']),_useState6=_slicedToArray(_useState5,2),userInputWords=_useState6[0],setUserInputWords=_useState6[1];var _useState7=useState(randomWords({exactly:TEST_WORDS})),_useState8=_slicedToArray(_useState7,2),testWords=_useState8[0],setTestWords=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isTestActive=_useState10[0],setIsTestActive=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isTestDone=_useState12[0],setIsTestDone=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),resetTestState=_useState14[0],setResetTestWords=_useState14[1];var typingArea=useRef(null);var testComplete=function testComplete(){setIsTestActive(false);setIsTestDone(true);};var resetTest=function resetTest(){setCurrentWordNum(0);setCurrentCharNum(0);setUserInputWords(['']);setTestWords(randomWords({exactly:TEST_WORDS}));setIsTestActive(false);setIsTestDone(false);setResetTestWords(true);};var onDeletion=function onDeletion(e){if(userInputWords.length>1&&userInputWords[currentWordNum].length===0){setUserInputWords(userInputWords.slice(0,-1));setCurrentWordNum(currentWordNum-1);setCurrentCharNum(userInputWords.slice(0,-1).length);}else if(userInputWords[currentWordNum].length>0){setCurrentCharNum(currentCharNum-1);var userInputs=_toConsumableArray(userInputWords);userInputs[currentWordNum]=userInputs[currentWordNum].slice(0,-1);setUserInputWords(userInputs);}};var onSpacebar=function onSpacebar(e){if(testWords[currentWordNum].length<=userInputWords[currentWordNum].length){setUserInputWords([].concat(_toConsumableArray(userInputWords),['']));setCurrentWordNum(currentWordNum+1);setCurrentCharNum(0);}};var onUserInput=function onUserInput(e){setCurrentCharNum(currentCharNum+1);var userInputs=_toConsumableArray(userInputWords);userInputs[currentWordNum]=userInputs[currentWordNum].concat(e.key);setUserInputWords(userInputs);};var handleOnKeyPress=function handleOnKeyPress(e){if(!isTestActive){setIsTestActive(true);setResetTestWords(false);}if(e.key===' '){onSpacebar(e);}else{onUserInput(e);}};var handleOnKeyDown=function handleOnKeyDown(e){if(e.key===\"Backspace\"){onDeletion(e);}};var handleClick=function handleClick(){typingArea.current.focus();};return/*#__PURE__*/React.createElement(\"div\",{onClick:handleClick,className:\"app\"},/*#__PURE__*/React.createElement(\"input\",{className:\"input\",ref:typingArea,onKeyPress:handleOnKeyPress,onKeyDown:handleOnKeyDown,type:\"text\",disabled:isTestDone,autoFocus:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"app-container\"},/*#__PURE__*/React.createElement(Title,null),/*#__PURE__*/React.createElement(WordList,{currentWordNum:currentWordNum,currentCharNum:currentCharNum,testWords:testWords,resetTestWords:resetTestState,userInputWords:userInputWords,isTestActive:isTestActive}),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"column\"},/*#__PURE__*/React.createElement(TimerCircle,{isTestActive:isTestActive,isTestDone:isTestDone,testComplete:testComplete,resetTest:resetTest})),/*#__PURE__*/React.createElement(\"div\",{className:\"column\"},/*#__PURE__*/React.createElement(Stats,{testWords:testWords,userInputWords:userInputWords,currentWordNum:currentWordNum,currentCharNum:currentCharNum,isTestActive:isTestActive,resetTestState:resetTestState}))),/*#__PURE__*/React.createElement(Footer,null)));};export default App;","map":{"version":3,"sources":["/home/brandon/jsproj/thetypingtest/src/App.js"],"names":["React","useState","useRef","Title","Stats","TimerCircle","WordList","randomWords","Footer","TEST_WORDS","App","currentWordNum","setCurrentWordNum","currentCharNum","setCurrentCharNum","userInputWords","setUserInputWords","exactly","testWords","setTestWords","isTestActive","setIsTestActive","isTestDone","setIsTestDone","resetTestState","setResetTestWords","typingArea","testComplete","resetTest","onDeletion","e","length","slice","userInputs","onSpacebar","onUserInput","concat","key","handleOnKeyPress","handleOnKeyDown","handleClick","current","focus"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Title from './Components/Title';\nimport Stats from './Components/Stats';\nimport TimerCircle from './Components/TimerCircle';\nimport WordList from './Components/WordList';\nimport randomWords from 'random-words';\nimport Footer from './Components/Footer';\nimport { TEST_WORDS } from './utils/constants'\n\nimport './App.css';\n\nconst App = () => {\n  const [currentWordNum, setCurrentWordNum] = useState(0);\n  const [currentCharNum, setCurrentCharNum] = useState(0);\n  const [userInputWords, setUserInputWords] = useState(['']);\n  const [testWords, setTestWords] = useState(randomWords({ exactly: TEST_WORDS }));\n  const [isTestActive, setIsTestActive] = useState(false);\n  const [isTestDone, setIsTestDone] = useState(false);\n  const [resetTestState, setResetTestWords] = useState(false);\n  const typingArea = useRef(null);\n\n  const testComplete = () => {\n    setIsTestActive(false);\n    setIsTestDone(true);\n  }\n\n  const resetTest = () => {\n    setCurrentWordNum(0);\n    setCurrentCharNum(0);\n    setUserInputWords(['']);\n    setTestWords(randomWords({ exactly: TEST_WORDS }));\n    setIsTestActive(false);\n    setIsTestDone(false);\n    setResetTestWords(true);\n  }\n\n  const onDeletion = (e) => {\n    if (userInputWords.length > 1 && userInputWords[currentWordNum].length === 0) {\n      setUserInputWords(userInputWords.slice(0, -1));\n      setCurrentWordNum(currentWordNum - 1);\n      setCurrentCharNum(userInputWords.slice(0, -1).length);\n    }\n    else if (userInputWords[currentWordNum].length > 0) {\n      setCurrentCharNum(currentCharNum - 1);\n      let userInputs = [...userInputWords];\n      userInputs[currentWordNum] = userInputs[currentWordNum].slice(0, -1);\n      setUserInputWords(userInputs);\n    }\n  }\n\n  const onSpacebar = (e) => {\n    if (testWords[currentWordNum].length <= userInputWords[currentWordNum].length) {\n      setUserInputWords([...userInputWords, '']);\n      setCurrentWordNum(currentWordNum + 1);\n      setCurrentCharNum(0);\n    }\n  }\n\n  const onUserInput = (e) => {\n    setCurrentCharNum(currentCharNum + 1);\n    let userInputs = [...userInputWords];\n    userInputs[currentWordNum] = userInputs[currentWordNum].concat(e.key);\n    setUserInputWords(userInputs);\n  }\n\n  const handleOnKeyPress = (e) => {\n    if (!isTestActive) {\n      setIsTestActive(true);\n      setResetTestWords(false);\n    }\n    if (e.key === ' ') {\n      onSpacebar(e);\n    } else {\n      onUserInput(e);\n    }\n  }\n\n  const handleOnKeyDown = (e) => {\n    if (e.key === \"Backspace\") {\n      onDeletion(e);\n    }\n  }\n\n  const handleClick = () => {\n    typingArea.current.focus();\n  }\n\n  return (\n    <div onClick={handleClick} className='app'>\n      <input\n        className='input'\n        ref={typingArea}\n        onKeyPress={handleOnKeyPress}\n        onKeyDown={handleOnKeyDown}\n        type='text'\n        disabled={isTestDone}\n        autoFocus\n      />\n      <div className='app-container'>\n        <Title />\n        <WordList\n          currentWordNum={currentWordNum}\n          currentCharNum={currentCharNum}\n          testWords={testWords}\n          resetTestWords={resetTestState}\n          userInputWords={userInputWords}\n          isTestActive={isTestActive}\n        />\n        <div className='row'>\n          <div className='column'>\n            <TimerCircle\n              isTestActive={isTestActive}\n              isTestDone={isTestDone}\n              testComplete={testComplete}\n              resetTest={resetTest}\n            />\n          </div>\n          <div className='column'>\n            <Stats\n              testWords={testWords}\n              userInputWords={userInputWords}\n              currentWordNum={currentWordNum}\n              currentCharNum={currentCharNum}\n              isTestActive={isTestActive}\n              resetTestState={resetTestState}\n            />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n\n\n\n"]},"metadata":{},"sourceType":"module"}