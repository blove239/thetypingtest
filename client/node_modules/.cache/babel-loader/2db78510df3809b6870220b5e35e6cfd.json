{"ast":null,"code":"var _jsxFileName = \"/home/brandon/jsproj/thetypingtest/src/Components/TimerBar.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../css/timerbar.css';\n\nconst Progress = ({\n  width,\n  elapsedTime\n}) => {\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    setValue(elapsedTime / 60 * width);\n  }, [elapsedTime, width]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-div\",\n    style: {\n      width: width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Time Remaining: \", 60 - elapsedTime, \"s\", /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: `${value}px`\n    },\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst TimerBar = ({\n  isTestActive,\n  testComplete,\n  resetTest,\n  isTestDone\n}) => {\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    let interval = null;\n\n    if (isTestActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    }\n\n    if (seconds === 5) {\n      testComplete();\n      setSeconds(0);\n    }\n\n    return () => clearInterval(interval);\n  }, [seconds, isTestActive]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, isTestDone ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \" Start Over! \") : /*#__PURE__*/React.createElement(Progress, {\n    width: 400,\n    elapsedTime: seconds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default TimerBar;","map":{"version":3,"sources":["/home/brandon/jsproj/thetypingtest/src/Components/TimerBar.js"],"names":["React","useState","useEffect","Progress","width","elapsedTime","value","setValue","TimerBar","isTestActive","testComplete","resetTest","isTestDone","seconds","setSeconds","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA4B;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAAEF,WAAW,GAAG,EAAf,GAAqBD,KAAtB,CAAR;AACD,GAFQ,EAEN,CAACC,WAAD,EAAcD,KAAd,CAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEA;AAAT,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmB,KAAKC,WADxB,oBAEE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAG,GAAEE,KAAM;AAAlB,KAAZ;AAAqC,IAAA,SAAS,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAfD;;AAiBA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA,SAA9B;AAAyCC,EAAAA;AAAzC,CAAD,KAA2D;AAC1E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,QAAQ,GAAG,IAAf;;AACA,QAAIN,YAAJ,EAAkB;AAChBM,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BF,QAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACD,OAFqB,EAEnB,IAFmB,CAAtB;AAGD;;AACD,QAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBH,MAAAA,YAAY;AACZI,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD;;AACD,WAAO,MAAMG,aAAa,CAACF,QAAD,CAA1B;AACD,GAZQ,EAYN,CAACF,OAAD,EAAUJ,YAAV,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,UAAU,gBAAG;AACZ,IAAA,OAAO,EAAED,SADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,gBAET,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAsB,IAAA,WAAW,EAAEE,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF,CADF;AASD,CA1BD;;AA4BA,eAAeL,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/timerbar.css';\n\nconst Progress = ({ width, elapsedTime }) => {\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    setValue((elapsedTime / 60) * width);\n  }, [elapsedTime, width]);\n\n  return (\n    <div>\n      <div className=\"progress-div\" style={{ width: width }}>\n        Time Remaining: {60 - elapsedTime}s\n        <div style={{ width: `${value}px` }} className=\"progress\" />\n      </div>\n    </div>\n  );\n};\n\nconst TimerBar = ({ isTestActive, testComplete, resetTest, isTestDone }) => {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    let interval = null;\n    if (isTestActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    }\n    if (seconds === 5) {\n      testComplete();\n      setSeconds(0);\n    }\n    return () => clearInterval(interval);\n  }, [seconds, isTestActive]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"div\">\n        {isTestDone ? <button\n          onClick={resetTest}> Start Over! </button> :\n          <Progress width={400} elapsedTime={seconds} />}\n      </div>\n    </div>\n  );\n}\n\nexport default TimerBar;\n"]},"metadata":{},"sourceType":"module"}